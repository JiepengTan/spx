{{ $view := . -}}
#ifndef CGO_GODOT_GO_GDEXTENSION_WRAPPER_H
#define CGO_GODOT_GO_GDEXTENSION_WRAPPER_H


/*------------------------------------------------------------------------------
//   This code was generated by template ffi_wrapper.c.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "ffi_wrapper.h.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/
#include "gdextension_spx_codegen_header.h"

/* Go cannot call C function pointers directly, so we must generate C wrapper code to call the functions. */

{{- range $i, $f := $view.CollectGDExtensionInterfaceFunctions -}}
void cgo_callfn_{{ $f.Name }}(
	{{- "const" }} {{ $f.Name }} fn
	{{- range $j, $arg := $f.Arguments -}}
		, {{ $arg.CStyleString $j }}
	{{- end -}}
	{{ if ne "void" $f.ReturnType.CStyleString -}}
	, {{$f.ReturnType.CStyleString }}* ret_val{{- end -}}
) {
	fn(
		{{- range $j, $arg := $f.Arguments }}
			{{- if gt $j 0 }}, {{ end }}
			{{- $arg.ResolvedName $j }}
		{{- end -}}
		{{- if ne "void" $f.ReturnType.CStyleString -}}
		{{- if ne 0 (len $f.Arguments) -}}, {{- end -}} ret_val 
		{{- end -}} 
	);
}
{{ end -}}

#endif
