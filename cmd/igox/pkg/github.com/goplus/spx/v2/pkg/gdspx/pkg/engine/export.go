// export by github.com/goplus/igop/cmd/qexp

package engine

import (
	q "github.com/goplus/spx/v2/pkg/gdspx/pkg/engine"

	"go/constant"
	"reflect"

	"github.com/goplus/igop"
)

func init() {
	igop.RegisterPackage(&igop.Package{
		Name: "engine",
		Path: "github.com/goplus/spx/v2/pkg/gdspx/pkg/engine",
		Deps: map[string]string{
			"fmt":                           "fmt",
			"github.com/realdream-ai/mathf": "mathf",
			"math":                          "math",
			"reflect":                       "reflect",
			"runtime/debug":                 "debug",
			"sort":                          "sort",
			"sync":                          "sync",
		},
		Interfaces: map[string]reflect.Type{
			"IAudioMgr":    reflect.TypeOf((*q.IAudioMgr)(nil)).Elem(),
			"ICameraMgr":   reflect.TypeOf((*q.ICameraMgr)(nil)).Elem(),
			"IExtMgr":      reflect.TypeOf((*q.IExtMgr)(nil)).Elem(),
			"IInputMgr":    reflect.TypeOf((*q.IInputMgr)(nil)).Elem(),
			"ILifeCycle":   reflect.TypeOf((*q.ILifeCycle)(nil)).Elem(),
			"IManager":     reflect.TypeOf((*q.IManager)(nil)).Elem(),
			"IPhysicMgr":   reflect.TypeOf((*q.IPhysicMgr)(nil)).Elem(),
			"IPlatformMgr": reflect.TypeOf((*q.IPlatformMgr)(nil)).Elem(),
			"IResMgr":      reflect.TypeOf((*q.IResMgr)(nil)).Elem(),
			"ISceneMgr":    reflect.TypeOf((*q.ISceneMgr)(nil)).Elem(),
			"ISpriteMgr":   reflect.TypeOf((*q.ISpriteMgr)(nil)).Elem(),
			"ISpriter":     reflect.TypeOf((*q.ISpriter)(nil)).Elem(),
			"IUiMgr":       reflect.TypeOf((*q.IUiMgr)(nil)).Elem(),
			"IUiNode":      reflect.TypeOf((*q.IUiNode)(nil)).Elem(),
		},
		NamedTypes: map[string]reflect.Type{
			"Action0":            reflect.TypeOf((*q.Action0)(nil)).Elem(),
			"CallbackInfo":       reflect.TypeOf((*q.CallbackInfo)(nil)).Elem(),
			"EngineCallbackInfo": reflect.TypeOf((*q.EngineCallbackInfo)(nil)).Elem(),
			"Event0":             reflect.TypeOf((*q.Event0)(nil)).Elem(),
			"KeyCode":            reflect.TypeOf((*q.KeyCode)(nil)).Elem(),
			"Node":               reflect.TypeOf((*q.Node)(nil)).Elem(),
			"Object":             reflect.TypeOf((*q.Object)(nil)).Elem(),
			"Sprite":             reflect.TypeOf((*q.Sprite)(nil)).Elem(),
			"UiNode":             reflect.TypeOf((*q.UiNode)(nil)).Elem(),
		},
		AliasTypes: map[string]reflect.Type{},
		Vars: map[string]reflect.Value{
			"AudioMgr":           reflect.ValueOf(&q.AudioMgr),
			"CameraMgr":          reflect.ValueOf(&q.CameraMgr),
			"ExtMgr":             reflect.ValueOf(&q.ExtMgr),
			"Id2Sprites":         reflect.ValueOf(&q.Id2Sprites),
			"Id2UiNodes":         reflect.ValueOf(&q.Id2UiNodes),
			"InputMgr":           reflect.ValueOf(&q.InputMgr),
			"Math_PI":            reflect.ValueOf(&q.Math_PI),
			"PhysicMgr":          reflect.ValueOf(&q.PhysicMgr),
			"PlatformMgr":        reflect.ValueOf(&q.PlatformMgr),
			"ResMgr":             reflect.ValueOf(&q.ResMgr),
			"SceneMgr":           reflect.ValueOf(&q.SceneMgr),
			"SpriteMgr":          reflect.ValueOf(&q.SpriteMgr),
			"TimeSinceGameStart": reflect.ValueOf(&q.TimeSinceGameStart),
			"UiMgr":              reflect.ValueOf(&q.UiMgr),
		},
		Funcs: map[string]reflect.Value{
			"Abs":                         reflect.ValueOf(q.Abs),
			"Angle":                       reflect.ValueOf(q.Angle),
			"AngleToPoint":                reflect.ValueOf(q.AngleToPoint),
			"BindSceneInstantiatedSprite": reflect.ValueOf(q.BindSceneInstantiatedSprite),
			"ClearAllSprites":             reflect.ValueOf(q.ClearAllSprites),
			"DealySpriteCall":             reflect.ValueOf(q.DealySpriteCall),
			"DegToRad":                    reflect.ValueOf(q.DegToRad),
			"DelayCall":                   reflect.ValueOf(q.DelayCall),
			"GetSprite":                   reflect.ValueOf(q.GetSprite),
			"InternalInitEngine":          reflect.ValueOf(q.InternalInitEngine),
			"InternalUpdateEngine":        reflect.ValueOf(q.InternalUpdateEngine),
			"NewEvent0":                   reflect.ValueOf(q.NewEvent0),
			"PrintStack":                  reflect.ValueOf(q.PrintStack),
			"RadToDeg":                    reflect.ValueOf(q.RadToDeg),
			"Sign":                        reflect.ValueOf(q.Sign),
			"TweenPos":                    reflect.ValueOf(q.TweenPos),
			"TweenPos2":                   reflect.ValueOf(q.TweenPos2),
		},
		TypedConsts: map[string]igop.TypedConst{
			"Key0":            {reflect.TypeOf(q.Key0), constant.MakeInt64(int64(q.Key0))},
			"Key1":            {reflect.TypeOf(q.Key1), constant.MakeInt64(int64(q.Key1))},
			"Key2":            {reflect.TypeOf(q.Key2), constant.MakeInt64(int64(q.Key2))},
			"Key3":            {reflect.TypeOf(q.Key3), constant.MakeInt64(int64(q.Key3))},
			"Key4":            {reflect.TypeOf(q.Key4), constant.MakeInt64(int64(q.Key4))},
			"Key5":            {reflect.TypeOf(q.Key5), constant.MakeInt64(int64(q.Key5))},
			"Key6":            {reflect.TypeOf(q.Key6), constant.MakeInt64(int64(q.Key6))},
			"Key7":            {reflect.TypeOf(q.Key7), constant.MakeInt64(int64(q.Key7))},
			"Key8":            {reflect.TypeOf(q.Key8), constant.MakeInt64(int64(q.Key8))},
			"Key9":            {reflect.TypeOf(q.Key9), constant.MakeInt64(int64(q.Key9))},
			"KeyA":            {reflect.TypeOf(q.KeyA), constant.MakeInt64(int64(q.KeyA))},
			"KeyAlt":          {reflect.TypeOf(q.KeyAlt), constant.MakeInt64(int64(q.KeyAlt))},
			"KeyAmpersand":    {reflect.TypeOf(q.KeyAmpersand), constant.MakeInt64(int64(q.KeyAmpersand))},
			"KeyApostrophe":   {reflect.TypeOf(q.KeyApostrophe), constant.MakeInt64(int64(q.KeyApostrophe))},
			"KeyAsciiCircum":  {reflect.TypeOf(q.KeyAsciiCircum), constant.MakeInt64(int64(q.KeyAsciiCircum))},
			"KeyAsciiTilde":   {reflect.TypeOf(q.KeyAsciiTilde), constant.MakeInt64(int64(q.KeyAsciiTilde))},
			"KeyAsterisk":     {reflect.TypeOf(q.KeyAsterisk), constant.MakeInt64(int64(q.KeyAsterisk))},
			"KeyAt":           {reflect.TypeOf(q.KeyAt), constant.MakeInt64(int64(q.KeyAt))},
			"KeyB":            {reflect.TypeOf(q.KeyB), constant.MakeInt64(int64(q.KeyB))},
			"KeyBack":         {reflect.TypeOf(q.KeyBack), constant.MakeInt64(int64(q.KeyBack))},
			"KeyBackslash":    {reflect.TypeOf(q.KeyBackslash), constant.MakeInt64(int64(q.KeyBackslash))},
			"KeyBackspace":    {reflect.TypeOf(q.KeyBackspace), constant.MakeInt64(int64(q.KeyBackspace))},
			"KeyBacktab":      {reflect.TypeOf(q.KeyBacktab), constant.MakeInt64(int64(q.KeyBacktab))},
			"KeyBar":          {reflect.TypeOf(q.KeyBar), constant.MakeInt64(int64(q.KeyBar))},
			"KeyBraceLeft":    {reflect.TypeOf(q.KeyBraceLeft), constant.MakeInt64(int64(q.KeyBraceLeft))},
			"KeyBraceRight":   {reflect.TypeOf(q.KeyBraceRight), constant.MakeInt64(int64(q.KeyBraceRight))},
			"KeyBracketLeft":  {reflect.TypeOf(q.KeyBracketLeft), constant.MakeInt64(int64(q.KeyBracketLeft))},
			"KeyBracketRight": {reflect.TypeOf(q.KeyBracketRight), constant.MakeInt64(int64(q.KeyBracketRight))},
			"KeyC":            {reflect.TypeOf(q.KeyC), constant.MakeInt64(int64(q.KeyC))},
			"KeyCapsLock":     {reflect.TypeOf(q.KeyCapsLock), constant.MakeInt64(int64(q.KeyCapsLock))},
			"KeyClear":        {reflect.TypeOf(q.KeyClear), constant.MakeInt64(int64(q.KeyClear))},
			"KeyCmdOrCtrl":    {reflect.TypeOf(q.KeyCmdOrCtrl), constant.MakeInt64(int64(q.KeyCmdOrCtrl))},
			"KeyColon":        {reflect.TypeOf(q.KeyColon), constant.MakeInt64(int64(q.KeyColon))},
			"KeyComma":        {reflect.TypeOf(q.KeyComma), constant.MakeInt64(int64(q.KeyComma))},
			"KeyCtrl":         {reflect.TypeOf(q.KeyCtrl), constant.MakeInt64(int64(q.KeyCtrl))},
			"KeyD":            {reflect.TypeOf(q.KeyD), constant.MakeInt64(int64(q.KeyD))},
			"KeyDelete":       {reflect.TypeOf(q.KeyDelete), constant.MakeInt64(int64(q.KeyDelete))},
			"KeyDollar":       {reflect.TypeOf(q.KeyDollar), constant.MakeInt64(int64(q.KeyDollar))},
			"KeyDown":         {reflect.TypeOf(q.KeyDown), constant.MakeInt64(int64(q.KeyDown))},
			"KeyE":            {reflect.TypeOf(q.KeyE), constant.MakeInt64(int64(q.KeyE))},
			"KeyEnd":          {reflect.TypeOf(q.KeyEnd), constant.MakeInt64(int64(q.KeyEnd))},
			"KeyEnter":        {reflect.TypeOf(q.KeyEnter), constant.MakeInt64(int64(q.KeyEnter))},
			"KeyEqual":        {reflect.TypeOf(q.KeyEqual), constant.MakeInt64(int64(q.KeyEqual))},
			"KeyEscape":       {reflect.TypeOf(q.KeyEscape), constant.MakeInt64(int64(q.KeyEscape))},
			"KeyExclam":       {reflect.TypeOf(q.KeyExclam), constant.MakeInt64(int64(q.KeyExclam))},
			"KeyF":            {reflect.TypeOf(q.KeyF), constant.MakeInt64(int64(q.KeyF))},
			"KeyF1":           {reflect.TypeOf(q.KeyF1), constant.MakeInt64(int64(q.KeyF1))},
			"KeyF10":          {reflect.TypeOf(q.KeyF10), constant.MakeInt64(int64(q.KeyF10))},
			"KeyF11":          {reflect.TypeOf(q.KeyF11), constant.MakeInt64(int64(q.KeyF11))},
			"KeyF12":          {reflect.TypeOf(q.KeyF12), constant.MakeInt64(int64(q.KeyF12))},
			"KeyF13":          {reflect.TypeOf(q.KeyF13), constant.MakeInt64(int64(q.KeyF13))},
			"KeyF14":          {reflect.TypeOf(q.KeyF14), constant.MakeInt64(int64(q.KeyF14))},
			"KeyF15":          {reflect.TypeOf(q.KeyF15), constant.MakeInt64(int64(q.KeyF15))},
			"KeyF16":          {reflect.TypeOf(q.KeyF16), constant.MakeInt64(int64(q.KeyF16))},
			"KeyF17":          {reflect.TypeOf(q.KeyF17), constant.MakeInt64(int64(q.KeyF17))},
			"KeyF18":          {reflect.TypeOf(q.KeyF18), constant.MakeInt64(int64(q.KeyF18))},
			"KeyF19":          {reflect.TypeOf(q.KeyF19), constant.MakeInt64(int64(q.KeyF19))},
			"KeyF2":           {reflect.TypeOf(q.KeyF2), constant.MakeInt64(int64(q.KeyF2))},
			"KeyF20":          {reflect.TypeOf(q.KeyF20), constant.MakeInt64(int64(q.KeyF20))},
			"KeyF21":          {reflect.TypeOf(q.KeyF21), constant.MakeInt64(int64(q.KeyF21))},
			"KeyF22":          {reflect.TypeOf(q.KeyF22), constant.MakeInt64(int64(q.KeyF22))},
			"KeyF23":          {reflect.TypeOf(q.KeyF23), constant.MakeInt64(int64(q.KeyF23))},
			"KeyF24":          {reflect.TypeOf(q.KeyF24), constant.MakeInt64(int64(q.KeyF24))},
			"KeyF25":          {reflect.TypeOf(q.KeyF25), constant.MakeInt64(int64(q.KeyF25))},
			"KeyF26":          {reflect.TypeOf(q.KeyF26), constant.MakeInt64(int64(q.KeyF26))},
			"KeyF27":          {reflect.TypeOf(q.KeyF27), constant.MakeInt64(int64(q.KeyF27))},
			"KeyF28":          {reflect.TypeOf(q.KeyF28), constant.MakeInt64(int64(q.KeyF28))},
			"KeyF29":          {reflect.TypeOf(q.KeyF29), constant.MakeInt64(int64(q.KeyF29))},
			"KeyF3":           {reflect.TypeOf(q.KeyF3), constant.MakeInt64(int64(q.KeyF3))},
			"KeyF30":          {reflect.TypeOf(q.KeyF30), constant.MakeInt64(int64(q.KeyF30))},
			"KeyF31":          {reflect.TypeOf(q.KeyF31), constant.MakeInt64(int64(q.KeyF31))},
			"KeyF32":          {reflect.TypeOf(q.KeyF32), constant.MakeInt64(int64(q.KeyF32))},
			"KeyF33":          {reflect.TypeOf(q.KeyF33), constant.MakeInt64(int64(q.KeyF33))},
			"KeyF34":          {reflect.TypeOf(q.KeyF34), constant.MakeInt64(int64(q.KeyF34))},
			"KeyF35":          {reflect.TypeOf(q.KeyF35), constant.MakeInt64(int64(q.KeyF35))},
			"KeyF4":           {reflect.TypeOf(q.KeyF4), constant.MakeInt64(int64(q.KeyF4))},
			"KeyF5":           {reflect.TypeOf(q.KeyF5), constant.MakeInt64(int64(q.KeyF5))},
			"KeyF6":           {reflect.TypeOf(q.KeyF6), constant.MakeInt64(int64(q.KeyF6))},
			"KeyF7":           {reflect.TypeOf(q.KeyF7), constant.MakeInt64(int64(q.KeyF7))},
			"KeyF8":           {reflect.TypeOf(q.KeyF8), constant.MakeInt64(int64(q.KeyF8))},
			"KeyF9":           {reflect.TypeOf(q.KeyF9), constant.MakeInt64(int64(q.KeyF9))},
			"KeyFavorites":    {reflect.TypeOf(q.KeyFavorites), constant.MakeInt64(int64(q.KeyFavorites))},
			"KeyForward":      {reflect.TypeOf(q.KeyForward), constant.MakeInt64(int64(q.KeyForward))},
			"KeyG":            {reflect.TypeOf(q.KeyG), constant.MakeInt64(int64(q.KeyG))},
			"KeyGlobe":        {reflect.TypeOf(q.KeyGlobe), constant.MakeInt64(int64(q.KeyGlobe))},
			"KeyGreater":      {reflect.TypeOf(q.KeyGreater), constant.MakeInt64(int64(q.KeyGreater))},
			"KeyH":            {reflect.TypeOf(q.KeyH), constant.MakeInt64(int64(q.KeyH))},
			"KeyHelp":         {reflect.TypeOf(q.KeyHelp), constant.MakeInt64(int64(q.KeyHelp))},
			"KeyHome":         {reflect.TypeOf(q.KeyHome), constant.MakeInt64(int64(q.KeyHome))},
			"KeyHomePage":     {reflect.TypeOf(q.KeyHomePage), constant.MakeInt64(int64(q.KeyHomePage))},
			"KeyHyper":        {reflect.TypeOf(q.KeyHyper), constant.MakeInt64(int64(q.KeyHyper))},
			"KeyI":            {reflect.TypeOf(q.KeyI), constant.MakeInt64(int64(q.KeyI))},
			"KeyInsert":       {reflect.TypeOf(q.KeyInsert), constant.MakeInt64(int64(q.KeyInsert))},
			"KeyJ":            {reflect.TypeOf(q.KeyJ), constant.MakeInt64(int64(q.KeyJ))},
			"KeyJISEisu":      {reflect.TypeOf(q.KeyJISEisu), constant.MakeInt64(int64(q.KeyJISEisu))},
			"KeyJISKana":      {reflect.TypeOf(q.KeyJISKana), constant.MakeInt64(int64(q.KeyJISKana))},
			"KeyK":            {reflect.TypeOf(q.KeyK), constant.MakeInt64(int64(q.KeyK))},
			"KeyKP0":          {reflect.TypeOf(q.KeyKP0), constant.MakeInt64(int64(q.KeyKP0))},
			"KeyKP1":          {reflect.TypeOf(q.KeyKP1), constant.MakeInt64(int64(q.KeyKP1))},
			"KeyKP2":          {reflect.TypeOf(q.KeyKP2), constant.MakeInt64(int64(q.KeyKP2))},
			"KeyKP3":          {reflect.TypeOf(q.KeyKP3), constant.MakeInt64(int64(q.KeyKP3))},
			"KeyKP4":          {reflect.TypeOf(q.KeyKP4), constant.MakeInt64(int64(q.KeyKP4))},
			"KeyKP5":          {reflect.TypeOf(q.KeyKP5), constant.MakeInt64(int64(q.KeyKP5))},
			"KeyKP6":          {reflect.TypeOf(q.KeyKP6), constant.MakeInt64(int64(q.KeyKP6))},
			"KeyKP7":          {reflect.TypeOf(q.KeyKP7), constant.MakeInt64(int64(q.KeyKP7))},
			"KeyKP8":          {reflect.TypeOf(q.KeyKP8), constant.MakeInt64(int64(q.KeyKP8))},
			"KeyKP9":          {reflect.TypeOf(q.KeyKP9), constant.MakeInt64(int64(q.KeyKP9))},
			"KeyKPAdd":        {reflect.TypeOf(q.KeyKPAdd), constant.MakeInt64(int64(q.KeyKPAdd))},
			"KeyKPDivide":     {reflect.TypeOf(q.KeyKPDivide), constant.MakeInt64(int64(q.KeyKPDivide))},
			"KeyKPEnter":      {reflect.TypeOf(q.KeyKPEnter), constant.MakeInt64(int64(q.KeyKPEnter))},
			"KeyKPMultiply":   {reflect.TypeOf(q.KeyKPMultiply), constant.MakeInt64(int64(q.KeyKPMultiply))},
			"KeyKPPeriod":     {reflect.TypeOf(q.KeyKPPeriod), constant.MakeInt64(int64(q.KeyKPPeriod))},
			"KeyKPSubtract":   {reflect.TypeOf(q.KeyKPSubtract), constant.MakeInt64(int64(q.KeyKPSubtract))},
			"KeyKeyboard":     {reflect.TypeOf(q.KeyKeyboard), constant.MakeInt64(int64(q.KeyKeyboard))},
			"KeyL":            {reflect.TypeOf(q.KeyL), constant.MakeInt64(int64(q.KeyL))},
			"KeyLaunch0":      {reflect.TypeOf(q.KeyLaunch0), constant.MakeInt64(int64(q.KeyLaunch0))},
			"KeyLaunch1":      {reflect.TypeOf(q.KeyLaunch1), constant.MakeInt64(int64(q.KeyLaunch1))},
			"KeyLaunch2":      {reflect.TypeOf(q.KeyLaunch2), constant.MakeInt64(int64(q.KeyLaunch2))},
			"KeyLaunch3":      {reflect.TypeOf(q.KeyLaunch3), constant.MakeInt64(int64(q.KeyLaunch3))},
			"KeyLaunch4":      {reflect.TypeOf(q.KeyLaunch4), constant.MakeInt64(int64(q.KeyLaunch4))},
			"KeyLaunch5":      {reflect.TypeOf(q.KeyLaunch5), constant.MakeInt64(int64(q.KeyLaunch5))},
			"KeyLaunch6":      {reflect.TypeOf(q.KeyLaunch6), constant.MakeInt64(int64(q.KeyLaunch6))},
			"KeyLaunch7":      {reflect.TypeOf(q.KeyLaunch7), constant.MakeInt64(int64(q.KeyLaunch7))},
			"KeyLaunch8":      {reflect.TypeOf(q.KeyLaunch8), constant.MakeInt64(int64(q.KeyLaunch8))},
			"KeyLaunch9":      {reflect.TypeOf(q.KeyLaunch9), constant.MakeInt64(int64(q.KeyLaunch9))},
			"KeyLaunchA":      {reflect.TypeOf(q.KeyLaunchA), constant.MakeInt64(int64(q.KeyLaunchA))},
			"KeyLaunchB":      {reflect.TypeOf(q.KeyLaunchB), constant.MakeInt64(int64(q.KeyLaunchB))},
			"KeyLaunchC":      {reflect.TypeOf(q.KeyLaunchC), constant.MakeInt64(int64(q.KeyLaunchC))},
			"KeyLaunchD":      {reflect.TypeOf(q.KeyLaunchD), constant.MakeInt64(int64(q.KeyLaunchD))},
			"KeyLaunchE":      {reflect.TypeOf(q.KeyLaunchE), constant.MakeInt64(int64(q.KeyLaunchE))},
			"KeyLaunchF":      {reflect.TypeOf(q.KeyLaunchF), constant.MakeInt64(int64(q.KeyLaunchF))},
			"KeyLaunchMail":   {reflect.TypeOf(q.KeyLaunchMail), constant.MakeInt64(int64(q.KeyLaunchMail))},
			"KeyLaunchMedia":  {reflect.TypeOf(q.KeyLaunchMedia), constant.MakeInt64(int64(q.KeyLaunchMedia))},
			"KeyLeft":         {reflect.TypeOf(q.KeyLeft), constant.MakeInt64(int64(q.KeyLeft))},
			"KeyLess":         {reflect.TypeOf(q.KeyLess), constant.MakeInt64(int64(q.KeyLess))},
			"KeyM":            {reflect.TypeOf(q.KeyM), constant.MakeInt64(int64(q.KeyM))},
			"KeyMediaNext":    {reflect.TypeOf(q.KeyMediaNext), constant.MakeInt64(int64(q.KeyMediaNext))},
			"KeyMediaPlay":    {reflect.TypeOf(q.KeyMediaPlay), constant.MakeInt64(int64(q.KeyMediaPlay))},
			"KeyMediaPrev":    {reflect.TypeOf(q.KeyMediaPrev), constant.MakeInt64(int64(q.KeyMediaPrev))},
			"KeyMediaRecord":  {reflect.TypeOf(q.KeyMediaRecord), constant.MakeInt64(int64(q.KeyMediaRecord))},
			"KeyMediaStop":    {reflect.TypeOf(q.KeyMediaStop), constant.MakeInt64(int64(q.KeyMediaStop))},
			"KeyMenu":         {reflect.TypeOf(q.KeyMenu), constant.MakeInt64(int64(q.KeyMenu))},
			"KeyMeta":         {reflect.TypeOf(q.KeyMeta), constant.MakeInt64(int64(q.KeyMeta))},
			"KeyMinus":        {reflect.TypeOf(q.KeyMinus), constant.MakeInt64(int64(q.KeyMinus))},
			"KeyN":            {reflect.TypeOf(q.KeyN), constant.MakeInt64(int64(q.KeyN))},
			"KeyNone":         {reflect.TypeOf(q.KeyNone), constant.MakeInt64(int64(q.KeyNone))},
			"KeyNumLock":      {reflect.TypeOf(q.KeyNumLock), constant.MakeInt64(int64(q.KeyNumLock))},
			"KeyNumberSign":   {reflect.TypeOf(q.KeyNumberSign), constant.MakeInt64(int64(q.KeyNumberSign))},
			"KeyO":            {reflect.TypeOf(q.KeyO), constant.MakeInt64(int64(q.KeyO))},
			"KeyOpenURL":      {reflect.TypeOf(q.KeyOpenURL), constant.MakeInt64(int64(q.KeyOpenURL))},
			"KeyP":            {reflect.TypeOf(q.KeyP), constant.MakeInt64(int64(q.KeyP))},
			"KeyPageDown":     {reflect.TypeOf(q.KeyPageDown), constant.MakeInt64(int64(q.KeyPageDown))},
			"KeyPageUp":       {reflect.TypeOf(q.KeyPageUp), constant.MakeInt64(int64(q.KeyPageUp))},
			"KeyParenLeft":    {reflect.TypeOf(q.KeyParenLeft), constant.MakeInt64(int64(q.KeyParenLeft))},
			"KeyParenRight":   {reflect.TypeOf(q.KeyParenRight), constant.MakeInt64(int64(q.KeyParenRight))},
			"KeyPause":        {reflect.TypeOf(q.KeyPause), constant.MakeInt64(int64(q.KeyPause))},
			"KeyPercent":      {reflect.TypeOf(q.KeyPercent), constant.MakeInt64(int64(q.KeyPercent))},
			"KeyPeriod":       {reflect.TypeOf(q.KeyPeriod), constant.MakeInt64(int64(q.KeyPeriod))},
			"KeyPlus":         {reflect.TypeOf(q.KeyPlus), constant.MakeInt64(int64(q.KeyPlus))},
			"KeyPrint":        {reflect.TypeOf(q.KeyPrint), constant.MakeInt64(int64(q.KeyPrint))},
			"KeyQ":            {reflect.TypeOf(q.KeyQ), constant.MakeInt64(int64(q.KeyQ))},
			"KeyQuestion":     {reflect.TypeOf(q.KeyQuestion), constant.MakeInt64(int64(q.KeyQuestion))},
			"KeyQuoteDbl":     {reflect.TypeOf(q.KeyQuoteDbl), constant.MakeInt64(int64(q.KeyQuoteDbl))},
			"KeyQuoteLeft":    {reflect.TypeOf(q.KeyQuoteLeft), constant.MakeInt64(int64(q.KeyQuoteLeft))},
			"KeyR":            {reflect.TypeOf(q.KeyR), constant.MakeInt64(int64(q.KeyR))},
			"KeyRefresh":      {reflect.TypeOf(q.KeyRefresh), constant.MakeInt64(int64(q.KeyRefresh))},
			"KeyRight":        {reflect.TypeOf(q.KeyRight), constant.MakeInt64(int64(q.KeyRight))},
			"KeyS":            {reflect.TypeOf(q.KeyS), constant.MakeInt64(int64(q.KeyS))},
			"KeyScrollLock":   {reflect.TypeOf(q.KeyScrollLock), constant.MakeInt64(int64(q.KeyScrollLock))},
			"KeySearch":       {reflect.TypeOf(q.KeySearch), constant.MakeInt64(int64(q.KeySearch))},
			"KeySection":      {reflect.TypeOf(q.KeySection), constant.MakeInt64(int64(q.KeySection))},
			"KeySemicolon":    {reflect.TypeOf(q.KeySemicolon), constant.MakeInt64(int64(q.KeySemicolon))},
			"KeyShift":        {reflect.TypeOf(q.KeyShift), constant.MakeInt64(int64(q.KeyShift))},
			"KeySlash":        {reflect.TypeOf(q.KeySlash), constant.MakeInt64(int64(q.KeySlash))},
			"KeySpace":        {reflect.TypeOf(q.KeySpace), constant.MakeInt64(int64(q.KeySpace))},
			"KeySpecial":      {reflect.TypeOf(q.KeySpecial), constant.MakeInt64(int64(q.KeySpecial))},
			"KeyStandby":      {reflect.TypeOf(q.KeyStandby), constant.MakeInt64(int64(q.KeyStandby))},
			"KeyStop":         {reflect.TypeOf(q.KeyStop), constant.MakeInt64(int64(q.KeyStop))},
			"KeySysReq":       {reflect.TypeOf(q.KeySysReq), constant.MakeInt64(int64(q.KeySysReq))},
			"KeyT":            {reflect.TypeOf(q.KeyT), constant.MakeInt64(int64(q.KeyT))},
			"KeyTab":          {reflect.TypeOf(q.KeyTab), constant.MakeInt64(int64(q.KeyTab))},
			"KeyU":            {reflect.TypeOf(q.KeyU), constant.MakeInt64(int64(q.KeyU))},
			"KeyUnderscore":   {reflect.TypeOf(q.KeyUnderscore), constant.MakeInt64(int64(q.KeyUnderscore))},
			"KeyUnknown":      {reflect.TypeOf(q.KeyUnknown), constant.MakeInt64(int64(q.KeyUnknown))},
			"KeyUp":           {reflect.TypeOf(q.KeyUp), constant.MakeInt64(int64(q.KeyUp))},
			"KeyV":            {reflect.TypeOf(q.KeyV), constant.MakeInt64(int64(q.KeyV))},
			"KeyVolumeDown":   {reflect.TypeOf(q.KeyVolumeDown), constant.MakeInt64(int64(q.KeyVolumeDown))},
			"KeyVolumeMute":   {reflect.TypeOf(q.KeyVolumeMute), constant.MakeInt64(int64(q.KeyVolumeMute))},
			"KeyVolumeUp":     {reflect.TypeOf(q.KeyVolumeUp), constant.MakeInt64(int64(q.KeyVolumeUp))},
			"KeyW":            {reflect.TypeOf(q.KeyW), constant.MakeInt64(int64(q.KeyW))},
			"KeyX":            {reflect.TypeOf(q.KeyX), constant.MakeInt64(int64(q.KeyX))},
			"KeyY":            {reflect.TypeOf(q.KeyY), constant.MakeInt64(int64(q.KeyY))},
			"KeyYen":          {reflect.TypeOf(q.KeyYen), constant.MakeInt64(int64(q.KeyYen))},
			"KeyZ":            {reflect.TypeOf(q.KeyZ), constant.MakeInt64(int64(q.KeyZ))},
		},
		UntypedConsts: map[string]igop.UntypedConst{},
	})
}
